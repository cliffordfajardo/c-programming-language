   ____                          _  _             
  / ___| ___   _ __ ___   _ __  (_)| |  ___  _ __ 
 | |    / _ \ | '_ ` _ \ | '_ \ | || | / _ \| '__|
 | |___| (_) || | | | | || |_) || || ||  __/| |   
  \____|\___/ |_| |_| |_|| .__/ |_||_| \___||_|   
                         |_|                      
****************************************************************************************************************

****************************************************************************************************************
What is compiler?
****************************************************************************************************************
A program that translates your code from one language to another. In the case of this C compiler
it will create assembly code.


****************************************************************************************************************
Instead running the whole toolchain and compiling to machine code, how do I only run up to the compiler?

Reminder of stages: preprocessor -> X -> Compiler -> X -> Assembler -> X -> Linker -> Binary Executable
****************************************************************************************************************
If your on mac, read your C compilers man pages. So: `man clang` indicates we need to pass a `-E` flag like so:

```c
# the `.s` file extension is used to indicate this is an assembly file. `-o` flag was used to name the ouput file but
# you can omit the -o flag which will result in the file being named after the programming ending in `.s` file extension.

clang -S my_program.c -o my_program_after_compiler-stage.s
```




****************************************************************************************************************
At this of writing, what has been your experience/exposure with compilers?
****************************************************************************************************************
12/05/2019
This very loaded and broad word. Maybe 15 years ago, before the rise of transpilers, one would just assume
we we're just talking about something translating a high level to machine code. Now there's things that are more
common like bytecode,  high level language to high level language compilation, but it seems like most people 
call this transpiling now...but some projects choose choose to call it a compiler. Ex (Sass Compiler, Typescript Compiler)

With some more time on this topic and after finishing the programming languages book I'm reading, my mental model
of the components related to common compiler toolchains will be more clear.  


****************************************************************************************************************
Whats the dumbest possible way to implement this (try pseudocode or blabber)? Embrace the not knowing - w00t!
****************************************************************************************************************
The compiler since its translating from one language to another would need to create an abstract syntax
tree of the C program so then it could transform it to the AST of an assembly program.

****************************************************************************************************************
Why is it done this way?
****************************************************************************************************************
Not sure..need to google why we need this 'intermediary' step. I assume it was do with how assembly
language constructs closely map to the hardware of the computer, whereas the C language doesn't, its a higher
level language with syntatic sugar over the more verbose assembly language.


****************************************************************************************************************
What tradeoffs were the designers considering?
****************************************************************************************************************




  ____       _  __        ____            _        _                _   _____                           _              ___  ____  
 / ___|  ___| |/ _|      / ___|___  _ __ | |_ __ _(_)_ __   ___  __| | | ____|_  ____ _ _ __ ___  _ __ | | ___  ___   / _ \|  _ \ 
 \___ \ / _ \ | |_ _____| |   / _ \| '_ \| __/ _` | | '_ \ / _ \/ _` | |  _| \ \/ / _` | '_ ` _ \| '_ \| |/ _ \/ __| | | | | |_) |
  ___) |  __/ |  _|_____| |__| (_) | | | | || (_| | | | | |  __/ (_| | | |___ >  < (_| | | | | | | |_) | |  __/\__ \ | |_| |  _ < 
 |____/ \___|_|_|        \____\___/|_| |_|\__\__,_|_|_| |_|\___|\__,_| |_____/_/\_\__,_|_| |_| |_| .__/|_|\___||___/  \___/|_| \_\
                                                                                                 |_|                              
  ____                 _   _           _   _   _             ____                                                                 
 |  _ \ _ __ __ _  ___| |_(_) ___ __ _| | | | | |___  ___   / ___|__ _ ___  ___  ___                                              
 | |_) | '__/ _` |/ __| __| |/ __/ _` | | | | | / __|/ _ \ | |   / _` / __|/ _ \/ __|                                             
 |  __/| | | (_| | (__| |_| | (_| (_| | | | |_| \__ \  __/ | |__| (_| \__ \  __/\__ \                                             
 |_|   |_|  \__,_|\___|\__|_|\___\__,_|_|  \___/|___/\___|  \____\__,_|___/\___||___/                                             
********************************************************************************************************************************************************************************************************************************                                                                                                                               


  ____                     __  _     _           _ _   _       _   _                 
/ ___|___  _ __  ___     / / | |   (_)_ __ ___ (_) |_(_) __ _| |_(_) ___  _ __  ___ 
| |   / _ \| '_ \/ __|   / /  | |   | | '_ ` _ \| | __| |/ _` | __| |/ _ \| '_ \/ __|
| |__| (_) | | | \__ \  / /   | |___| | | | | | | | |_| | (_| | |_| | (_) | | | \__ \
\____\___/|_| |_|___/ /_/    |_____|_|_| |_| |_|_|\__|_|\__,_|\__|_|\___/|_| |_|___/    

It’s not wise to be very proud of your own opinion, if you can’t state the arguments for the other side
better than your opponents. This is a great mental discipline." - Charlie Munger
****************************************************************************************************************




_____              _                  _             
|  ___|___    ___  | |_  _ __    ___  | |_  ___  ___ 
| |_  / _ \  / _ \ | __|| '_ \  / _ \ | __|/ _ \/ __|
|  _|| (_) || (_) || |_ | | | || (_) || |_|  __/\__ \
|_|   \___/  \___/  \__||_| |_| \___/  \__|\___||___/
****************************************************************************************************************


